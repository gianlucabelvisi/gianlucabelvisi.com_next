{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file:///Users/gianlucabelvisi/Workspace/blog/new_blog/src/app/blog/%5Bslug%5D/page.tsx"],"sourcesContent":["import { notFound } from 'next/navigation'\nimport type { Metadata } from 'next'\n\ninterface BlogPostPageProps {\n  params: {\n    slug: string\n  }\n}\n\n// This will be replaced with actual post fetching logic later\nasync function getPost(slug: string) {\n  // For now, only return data for the diabetes post\n  if (slug === 'diabetes') {\n    return {\n      slug: 'diabetes',\n      frontmatter: {\n        path: '/diabetes',\n        date: '2024-02-24',\n        title: 'I have diabetes and that\\'s ok',\n        subTitle: 'How a cat helped my diagnosis, and on processing loss.',\n        author: 'Gianluca Belvisi',\n        hashtags: 'health,lifestyle,mindfulness',\n        hidden: false\n      },\n      content: 'Blog post content will be loaded here...'\n    }\n  }\n  return null\n}\n\nexport async function generateMetadata({ params }: BlogPostPageProps): Promise<Metadata> {\n  const post = await getPost(params.slug)\n  \n  if (!post) {\n    return {\n      title: 'Post Not Found'\n    }\n  }\n\n  return {\n    title: post.frontmatter.title,\n    description: post.frontmatter.subTitle,\n    authors: [{ name: post.frontmatter.author }],\n  }\n}\n\nexport async function generateStaticParams() {\n  // For now, only generate the diabetes post\n  return [\n    { slug: 'diabetes' }\n  ]\n}\n\nexport default async function BlogPostPage({ params }: BlogPostPageProps) {\n  const post = await getPost(params.slug)\n\n  if (!post) {\n    notFound()\n  }\n\n  return (\n    <article style={{ maxWidth: '800px', margin: '0 auto', padding: '2rem' }}>\n      {/* Post Header */}\n      <header style={{ marginBottom: '3rem', textAlign: 'center' }}>\n        <time style={{ \n          fontSize: '0.9rem', \n          color: '#666',\n          textTransform: 'uppercase',\n          letterSpacing: '0.1em'\n        }}>\n          {new Date(post.frontmatter.date).toLocaleDateString('en-US', {\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric'\n          })}\n        </time>\n        <h1 style={{ \n          fontSize: '2.5rem', \n          marginTop: '1rem',\n          marginBottom: '1rem',\n          lineHeight: '1.2'\n        }}>\n          {post.frontmatter.title}\n        </h1>\n        <p style={{ \n          fontSize: '1.2rem', \n          color: '#666',\n          fontStyle: 'italic'\n        }}>\n          {post.frontmatter.subTitle}\n        </p>\n        <p style={{ \n          fontSize: '0.9rem', \n          color: '#999',\n          marginTop: '1rem'\n        }}>\n          By {post.frontmatter.author}\n        </p>\n      </header>\n\n      {/* Post Content */}\n      <div style={{ \n        lineHeight: '1.7',\n        fontSize: '1.1rem'\n      }}>\n        <div style={{\n          padding: '2rem',\n          backgroundColor: '#f9f9f9',\n          borderRadius: '8px',\n          border: '1px solid #eee',\n          textAlign: 'center'\n        }}>\n          <h2>Content Coming Soon!</h2>\n          <p>This is where the full MDX content will be rendered.</p>\n          <p>We'll implement the MDX processing and custom components in the next phases.</p>\n          <p style={{ marginTop: '2rem', fontSize: '0.9rem', color: '#666' }}>\n            <strong>Post slug:</strong> {params.slug}\n          </p>\n        </div>\n      </div>\n\n      {/* Post Footer */}\n      <footer style={{ \n        marginTop: '4rem', \n        paddingTop: '2rem',\n        borderTop: '1px solid #eee',\n        textAlign: 'center'\n      }}>\n        <p style={{ color: '#666' }}>\n          <a href=\"/\" style={{ textDecoration: 'none' }}>‚Üê Back to Home</a>\n        </p>\n      </footer>\n    </article>\n  )\n} "],"names":[],"mappings":";;;;;;AAAA;AAAA;;;AASA,8DAA8D;AAC9D,eAAe,QAAQ,IAAY;IACjC,kDAAkD;IAClD,IAAI,SAAS,YAAY;QACvB,OAAO;YACL,MAAM;YACN,aAAa;gBACX,MAAM;gBACN,MAAM;gBACN,OAAO;gBACP,UAAU;gBACV,QAAQ;gBACR,UAAU;gBACV,QAAQ;YACV;YACA,SAAS;QACX;IACF;IACA,OAAO;AACT;AAEO,eAAe,iBAAiB,EAAE,MAAM,EAAqB;IAClE,MAAM,OAAO,MAAM,QAAQ,OAAO,IAAI;IAEtC,IAAI,CAAC,MAAM;QACT,OAAO;YACL,OAAO;QACT;IACF;IAEA,OAAO;QACL,OAAO,KAAK,WAAW,CAAC,KAAK;QAC7B,aAAa,KAAK,WAAW,CAAC,QAAQ;QACtC,SAAS;YAAC;gBAAE,MAAM,KAAK,WAAW,CAAC,MAAM;YAAC;SAAE;IAC9C;AACF;AAEO,eAAe;IACpB,2CAA2C;IAC3C,OAAO;QACL;YAAE,MAAM;QAAW;KACpB;AACH;AAEe,eAAe,aAAa,EAAE,MAAM,EAAqB;IACtE,MAAM,OAAO,MAAM,QAAQ,OAAO,IAAI;IAEtC,IAAI,CAAC,MAAM;QACT,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD;IACT;IAEA,qBACE,8OAAC;QAAQ,OAAO;YAAE,UAAU;YAAS,QAAQ;YAAU,SAAS;QAAO;;0BAErE,8OAAC;gBAAO,OAAO;oBAAE,cAAc;oBAAQ,WAAW;gBAAS;;kCACzD,8OAAC;wBAAK,OAAO;4BACX,UAAU;4BACV,OAAO;4BACP,eAAe;4BACf,eAAe;wBACjB;kCACG,IAAI,KAAK,KAAK,WAAW,CAAC,IAAI,EAAE,kBAAkB,CAAC,SAAS;4BAC3D,MAAM;4BACN,OAAO;4BACP,KAAK;wBACP;;;;;;kCAEF,8OAAC;wBAAG,OAAO;4BACT,UAAU;4BACV,WAAW;4BACX,cAAc;4BACd,YAAY;wBACd;kCACG,KAAK,WAAW,CAAC,KAAK;;;;;;kCAEzB,8OAAC;wBAAE,OAAO;4BACR,UAAU;4BACV,OAAO;4BACP,WAAW;wBACb;kCACG,KAAK,WAAW,CAAC,QAAQ;;;;;;kCAE5B,8OAAC;wBAAE,OAAO;4BACR,UAAU;4BACV,OAAO;4BACP,WAAW;wBACb;;4BAAG;4BACG,KAAK,WAAW,CAAC,MAAM;;;;;;;;;;;;;0BAK/B,8OAAC;gBAAI,OAAO;oBACV,YAAY;oBACZ,UAAU;gBACZ;0BACE,cAAA,8OAAC;oBAAI,OAAO;wBACV,SAAS;wBACT,iBAAiB;wBACjB,cAAc;wBACd,QAAQ;wBACR,WAAW;oBACb;;sCACE,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;sCAAE;;;;;;sCACH,8OAAC;sCAAE;;;;;;sCACH,8OAAC;4BAAE,OAAO;gCAAE,WAAW;gCAAQ,UAAU;gCAAU,OAAO;4BAAO;;8CAC/D,8OAAC;8CAAO;;;;;;gCAAmB;gCAAE,OAAO,IAAI;;;;;;;;;;;;;;;;;;0BAM9C,8OAAC;gBAAO,OAAO;oBACb,WAAW;oBACX,YAAY;oBACZ,WAAW;oBACX,WAAW;gBACb;0BACE,cAAA,8OAAC;oBAAE,OAAO;wBAAE,OAAO;oBAAO;8BACxB,cAAA,8OAAC;wBAAE,MAAK;wBAAI,OAAO;4BAAE,gBAAgB;wBAAO;kCAAG;;;;;;;;;;;;;;;;;;;;;;AAKzD","debugId":null}}]
}